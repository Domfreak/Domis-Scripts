local Library = loadstring(game:HttpGet("https://pastebin.com/raw/f13wwbkV"))()
local Window = Library.CreateLib("Domi's Universal Hub", "Synapse")


--Main
local Main = Window:NewTab("Main")
local MainSection = Main:NewSection("Main")

--ClickTP
MainSection:NewButton("ClickTP", "Strg + Click to tp", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/KeQ58QxB"))()
end)

local flyon;
--Fly
MainSection:NewToggle("Fly (X)", "X for Bypass fly", function(state)

    _G.FLYING = false
    flyon = state
local LP = game:service('Players').LocalPlayer
local T = LP.Character.UpperTorso
local CONTROL = {F = 0, B = 0, L = 0, R = 0}
local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
local SPEED = 5
local MOUSE = LP:GetMouse()
 
 
local function FLY()
    _G.FLYING = true
    local BG = Instance.new('BodyGyro', T)
    local BV = Instance.new('BodyVelocity', T)
    BG.P = 9e4
    BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    BG.cframe = T.CFrame
    BV.velocity = Vector3.new(0, 0.1, 0)
    BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
 
 
    spawn(function()
      repeat wait()
        LP.Character.Humanoid.PlatformStand = true
        if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
          SPEED = 50
        elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
          SPEED = 0
        end
        if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
          BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
          lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
        elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
          BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
        else
          BV.velocity = Vector3.new(0, 0.1, 0)
        end
        BG.cframe = game.Workspace.CurrentCamera.CoordinateFrame
      until not _G.FLYING
      CONTROL = {F = 0, B = 0, L = 0, R = 0}
      lCONTROL = {F = 0, B = 0, L = 0, R = 0}
      SPEED = 0
      BG:destroy()
      BV:destroy()
      LP.Character.Humanoid.PlatformStand = false
    end)
  end
 
  MOUSE.KeyDown:connect(function(KEY)
    if KEY:lower() == 'w' then
      CONTROL.F = 1
    elseif KEY:lower() == 's' then
      CONTROL.B = -1
    elseif KEY:lower() == 'a' then
      CONTROL.L = -1 
    elseif KEY:lower() == 'd' then 
      CONTROL.R = 1
    end
  end)
 
  MOUSE.KeyUp:connect(function(KEY)
    if KEY:lower() == 'w' then
      CONTROL.F = 0
    elseif KEY:lower() == 's' then
      CONTROL.B = 0
    elseif KEY:lower() == 'a' then
      CONTROL.L = 0
    elseif KEY:lower() == 'd' then
      CONTROL.R = 0
    end
  end)
 
 
 
 if state then
  FLY()
    end
end)

local noclipon;
--Noclip
MainSection:NewToggle("Noclip (N)", "N to walk through walls, B to clip again", function(state)
    noclipon = state
    if state then
	game:getService("RunService"):BindToRenderStep("",0,function()
		if not game.Players.LocalPlayer.Character:findFirstChildOfClass("Humanoid") then return end
		if game:getService("UserInputService"):IsKeyDown(Enum.KeyCode.N) then
		game.Players.LocalPlayer.Character:findFirstChildOfClass("Humanoid"):ChangeState(11)
		end
		end)
end)

MainSection:NewButton("Aimbot (E)", "Loads up Aimbot", function()
    local Settings = {
		rewrittenmain = {
			Enabled = true,
			Key = "e",
			DOT = true,
			AIRSHOT = true,
			NOTIF = true,
			AUTOPRED = false,
			FOV = math.huge,
			RESOVLER = true
		}
	}
	 
	local SelectedPart = "HumanoidRootPart"
	local Prediction = true
	local PredictionValue = 0.121
	 
	 
		local AnchorCount = 0
		local MaxAnchor = 50
	 
		local CC = game:GetService"Workspace".CurrentCamera
		local Plr;
		local enabled = false
		local accomidationfactor = 0.121
		local mouse = game.Players.LocalPlayer:GetMouse()
		local placemarker = Instance.new("Part", game.Workspace)
	 
		function makemarker(Parent, Adornee, Color, Size, Size2)
			local e = Instance.new("BillboardGui", Parent)
			e.Name = "PP"
			e.Adornee = Adornee
			e.Size = UDim2.new(Size, Size2, Size, Size2)
			e.AlwaysOnTop = Settings.rewrittenmain.DOT
			local a = Instance.new("Frame", e)
			if Settings.rewrittenmain.DOT == true then
			a.Size = UDim2.new(1, 0, 1, 0)
			else
			a.Size = UDim2.new(0, 0, 0, 0)
			end
			if Settings.rewrittenmain.DOT == true then
			a.Transparency = 0
			a.BackgroundTransparency = 0
			else
			a.Transparency = 1
			a.BackgroundTransparency = 1
			end
			a.BackgroundColor3 = Color
			local g = Instance.new("UICorner", a)
			if Settings.rewrittenmain.DOT == false then
			g.CornerRadius = UDim.new(0, 0)
			else
			g.CornerRadius = UDim.new(1, 1) 
			end
			return(e)
		end
	 
	 
		local data = game.Players:GetPlayers()
		function noob(player)
			local character
			repeat wait() until player.Character
			local handler = makemarker(guimain, player.Character:WaitForChild(SelectedPart), Color3.fromRGB(107, 184, 255), 0.3, 3)
			handler.Name = player.Name
			player.CharacterAdded:connect(function(Char) handler.Adornee = Char:WaitForChild(SelectedPart) end)
	 
	 
			spawn(function()
				while wait() do
					if player.Character then
					end
				end
			end)
		end
	 
		for i = 1, #data do
			if data[i] ~= game.Players.LocalPlayer then
				noob(data[i])
			end
		end
	 
		game.Players.PlayerAdded:connect(function(Player)
			noob(Player)
		end)
	 
		spawn(function()
			placemarker.Anchored = true
			placemarker.CanCollide = false
			if Settings.rewrittenmain.DOT == true then
			placemarker.Size = Vector3.new(8, 8, 8)
			else
			placemarker.Size = Vector3.new(0, 0, 0)
			end
			placemarker.Transparency = 0.75
			if Settings.rewrittenmain.DOT then
			makemarker(placemarker, placemarker, Color3.fromRGB(232, 186, 200), 0.40, 0)
			end
		end)
	 
		game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
			if k == Settings.rewrittenmain.Key and Settings.rewrittenmain.Enabled then
				if enabled == true then
					enabled = false
					if Settings.rewrittenmain.NOTIF == true then
						Plr = getClosestPlayerToCursor()
					game.StarterGui:SetCore("SendNotification", {
						Title = "";
						Text = "Unlocked :)",
						Duration = 5
					})
				end
				else
					Plr = getClosestPlayerToCursor()
					enabled = true
					if Settings.rewrittenmain.NOTIF == true then
	 
						game.StarterGui:SetCore("SendNotification", {
							Title = "";
							Text = "Target: "..tostring(Plr.Character.Humanoid.DisplayName),
							Duration = 5
						})
	 
					end
				end
			end
		end)
	 
	 
	 
		function getClosestPlayerToCursor()
			local closestPlayer
			local shortestDistance = Settings.rewrittenmain.FOV
	 
			for i, v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") then
					local pos = CC:WorldToViewportPoint(v.Character.PrimaryPart.Position)
					local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(mouse.X, mouse.Y)).magnitude
					if magnitude < shortestDistance then
						closestPlayer = v
						shortestDistance = magnitude
					end
				end
			end
			return closestPlayer
		end
	 
		local pingvalue = nil;
		local split = nil;
		local ping = nil;
	 
		game:GetService"RunService".Stepped:connect(function()
			if enabled and Plr.Character ~= nil and Plr.Character:FindFirstChild("HumanoidRootPart") then
				placemarker.CFrame = CFrame.new(Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*accomidationfactor))
			else
				placemarker.CFrame = CFrame.new(0, 9999, 0)
			end
			if Settings.rewrittenmain.AUTOPRED == true then
				 pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
				 split = string.split(pingvalue,'(')
				 ping = tonumber(split[1])
				if ping < 130 then
					PredictionValue = 0.151
				elseif ping < 125 then
					PredictionValue = 0.149
				elseif ping < 110 then
					PredictionValue = 0.146
				elseif ping < 105 then
					PredictionValue = 0.138
				elseif ping < 90 then
					PredictionValue = 0.136
				elseif ping < 80 then
					PredictionValue = 0.134
				elseif ping < 70 then
					PredictionValue = 0.131
				elseif ping < 60 then
					PredictionValue = 0.1229
				elseif ping < 50 then
					PredictionValue = 0.1225
				elseif ping < 40 then
					PredictionValue = 0.1256
				end
			end
		end)
	 
		local mt = getrawmetatable(game)
		local old = mt.__namecall
		setreadonly(mt, false)
		mt.__namecall = newcclosure(function(...)
			local args = {...}
			if enabled and getnamecallmethod() == "FireServer" and args[2] == "UpdateMousePos" and Settings.rewrittenmain.Enabled and Plr.Character ~= nil then
	 
				-- args[3] = Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*accomidationfactor)
				--[[
				if Settings.rewrittenmain.AIRSHOT == true then
					if game.Workspace.Players[Plr.Name].Humanoid:GetState() == Enum.HumanoidStateType.Freefall then -- Plr.Character:WaitForChild("Humanoid"):GetState() == Enum.HumanoidStateType.Freefall
	 
						--// Airshot
						args[3] = Plr.Character.LeftFoot.Position+(Plr.Character.LeftFoot.Velocity*PredictionValue)
	 
					else
						args[3] = Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*PredictionValue)
	 
					end
				else
						args[3] = Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*PredictionValue)
				end
				]]
				if Prediction == true then
	 
				args[3] = Plr.Character[SelectedPart].Position+(Plr.Character[SelectedPart].Velocity*PredictionValue)
	 
				else
	 
				args[3] = Plr.Character[SelectedPart].Position
	 
				end
	 
				return old(unpack(args))
			end
			return old(...)
		end)
	 
		game:GetService("RunService").RenderStepped:Connect(function()
			if Settings.rewrittenmain.RESOVLER == true and Plr.Character ~= nil and enabled and Settings.rewrittenmain.Enabled then
			if Settings.rewrittenmain.AIRSHOT == true and enabled and Plr.Character ~= nil then
	 
				if game.Workspace.Players[Plr.Name].Humanoid:GetState() == Enum.HumanoidStateType.Freefall then -- Plr.Character:WaitForChild("Humanoid"):GetState() == Enum.HumanoidStateType.Freefall
	 
					--// Airshot
	 
					--// Anchor Check
	 
					if Plr.Character ~= nil and Plr.Character.HumanoidRootPart.Anchored == true then
						AnchorCount = AnchorCount + 1
						if AnchorCount >= MaxAnchor then
							Prediction = false
							wait(2)
							AnchorCount = 0;
						end
					else
						Prediction = true
						AnchorCount = 0;
					end
	 
					SelectedPart = "LeftFoot"
	 
				else
					--// Anchor Check
	 
					if Plr.Character ~= nil and Plr.Character.HumanoidRootPart.Anchored == true then
						AnchorCount = AnchorCount + 1
						if AnchorCount >= MaxAnchor then
							Prediction = false
							wait(2)
							AnchorCount = 0;
						end
					else
						Prediction = true
						AnchorCount = 0;
					end
	 
					SelectedPart = "HumanoidRootPart"
	 
				end
				else
	 
					--// Anchor Check
	 
					if Plr.Character ~= nil and Plr.Character.HumanoidRootPart.Anchored == true then
						AnchorCount = AnchorCount + 1
						if AnchorCount >= MaxAnchor then
							Prediction = false
							wait(2)
							AnchorCount = 0;
						end
					else
						Prediction = true
						AnchorCount = 0;
					end
	 
					SelectedPart = "HumanoidRootPart"
				end
	 
			else
					SelectedPart = "HumanoidRootPart"
			end
		end)
	
end)



--Player
local Player = Window:NewTab("Player")
local PlayerSection = Player:NewSection("Player")

PlayerSection:NewSlider("WalkSpeed", "Set your Walkspeed", 500, 16, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

PlayerSection:NewSlider("JumpPower", "Set your JumpPower", 400, 50, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
end)

PlayerSection:NewButton("Reset Speed + JumpPower", "Resets the Speed and JumpPower from above", function()
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
end)

--Inf Jump
local InfiniteJumpEnabled;
PlayerSection:NewToggle("Infinite Jump", "Let you Jump infinite", function(State)
    InfiniteJumpEnabled = State
end)

local Player = game:GetService("Players").LocalPlayer
game:GetService("UserInputService").JumpRequest:Connect(function()
     if InfiniteJumpEnabled then
         Player.Character:WaitForChild("Humanoid"):ChangeState("Jumping")
     end
end)


--Misc
local Misc = Window:NewTab("Misc")
local MiscSection = Misc:NewSection("Misc")

--ESP
MiscSection:NewButton("ESP GUI", "Brings up an esp GUI", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/ic3w0lf22/Unnamed-ESP/master/UnnamedESP.lua"))()
end)

--Force Reset
MiscSection:NewButton("ForceReset", "Forces Client to Reset", function()
    local hrp = game.Players.LocalPlayer.Character.HumanoidRootPart
	local destination_part = game.Workspace.Baseplate
	hrp.Position = destination_part.Position
end)

--Night Vision
MiscSection:NewButton("Night Vision", "Toggles Night Vision", function()
	local uis = game:GetService("UserInputService")
	isenabled = false
	dounce = false
	local defaultAmbient = game.Lighting.OutdoorAmbient
	local sound = Instance.new("Sound", game.SoundService)
	local cce = Instance.new("ColorCorrectionEffect", game.Lighting)
	cce.Enabled = false
	cce.Brightness = .2
	cce.Contrast = .2
	cce.TintColor = Color3.new(0.376471, 0.772549, 0.317647)
	sound.SoundId = "rbxassetid://6361023770"
	
	uis.InputBegan:Connect(function(input, processed)
	if input.KeyCode == Enum.KeyCode.E then
	if dounce == false then
	dounce = true
	if isenabled == false then
	sound:Play()
	game.Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)
	cce.Enabled = true
	game.Lighting.ExposureCompensation = 1.5
	isenabled = true
	elseif isenabled == true then
	sound:Play()
	game.Lighting.OutdoorAmbient = defaultAmbient
	cce.Enabled = false
	game.Lighting.ExposureCompensation = 0
	isenabled = false
	
	end
	else
	wait(3)
	dounce = false
	end
	end
	end)
end)


--UI Keybind
MiscSection:NewKeybind("ToggleUI", "Toggles the GUI", Enum.KeyCode.V, function()
	Library:ToggleUI()
end)
